name: ML Pipeline Tests with CML Report

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-ml-pipeline:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-xdist coverage[toml]
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Pull DVC data
      run: |
        dvc pull --force
        
    - name: Install CML
      uses: iterative/setup-cml@v1
      
    - name: Run Tests and Validation
      id: run_scripts
      run: |
        # Run tests and training, but allow the workflow to continue on failure
        # to ensure the report is always generated.
        pytest test_pipeline.py -v --cov=. --cov-report=xml --junit-xml=test-results.xml || echo "Pytest execution failed"
        python -c "from main import IrisPipeline; IrisPipeline().run_training_pipeline()" || echo "Training script execution failed"

    - name: Generate CML Report
      id: cml_report
      env:
        GH_WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      run: python scripts/generate_report.py
        
    - name: Publish CML Report
      if: always()
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Creates a comment on the PR or commit.
        cml comment create report.md
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          report.md
          test-results.xml
          coverage.xml
          artifacts/
        retention-days: 30 